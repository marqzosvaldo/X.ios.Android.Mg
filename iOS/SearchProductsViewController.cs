// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace maringuizarapp.iOS {
	public partial class SearchProductsViewController : UIViewController {
	List<Producto> lstProducto;

		public SearchProductsViewController(IntPtr handle) : base(handle) {
		}



		public override void ViewDidLoad() {
			NavigationItem.Title = "Productos";
			Title = "Productos"; 
			base.ViewDidLoad();
			searchBarProducts.SizeToFit();
			//searchBarProducts.TextChanged += SearchBarProducts_TextChanged;
			buttonSaveJson.Clicked += ButtonSaveJson_Clicked;


			List<string> names = new List<string> {
				"Ricardo", "Alan","Wiliam","Gabriel","Juan Carlos", "Osvaldo","Emmanuel",
								"Jose Luis","Juan Carlos", "Osvaldo","Emmanuel",
								"Jose Luis","Juan Carlos", "Osvaldo","Emmanuel",
								"Jose Luis","Juan Carlos", "Osvaldo","Emmanuel",
								"Jose Luis"
			};

			//TableViewProducts.Source = new NamesTableViewSource(names);

		}

		public async override void ViewWillAppear(bool animated) {
			base.ViewWillAppear(animated);
			//if (await ProductoReadyAsync("a") == true) {
			//	Console.WriteLine("REady async TRUE!");
			//} else {
			//	Console.WriteLine("READY ASYNC false");
			//}


		}

		void ButtonSaveJson_Clicked(object sender, EventArgs e) {
			SaveFile();

		}

		async void SaveFile() {
			try {
				Service.Service servicio = new Service.Service();
				var jsonStr = await servicio.saveJsonFile();
				var documents = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);

				var filename = Path.Combine(documents, "allItems.json");
				File.WriteAllText(filename, jsonStr);

				//File.ReadAllText(filename);

				//Console.WriteLine(jsonStr);

				var sessioErrorAlert = UIAlertController.Create("Json Guardado", "OK", UIAlertControllerStyle.Alert);
				sessioErrorAlert.AddAction (UIAlertAction.Create ("Ok", UIAlertActionStyle.Default, null));

				//myTextViewC.Text = jsonStr;
                PresentViewController(sessioErrorAlert, true, null);

			}
			catch (Exception e) {
				Console.WriteLine("El archivo json no se ha podido guardar!");
				var sessioErrorAlert = UIAlertController.Create("Json No Guardado", "OK", UIAlertControllerStyle.Alert);

				sessioErrorAlert.AddAction (UIAlertAction.Create ("Ok", UIAlertActionStyle.Default, null));
                PresentViewController(sessioErrorAlert, true, null);

				Console.WriteLine(e);

			}	
		}
	

		//async void SearchBarProducts_TextChanged(object sender, UISearchBarTextChangedEventArgs e) {
		//	Console.WriteLine(searchBarProducts.Text + "---------" + e.SearchText);
		//	await ProductoReadyAsync(e.SearchText);
		//	TableViewProducts.ReloadData();


		//}

		//async Task<bool> ProductoReadyAsync(string o) {

		//	try { 
		//		Service.Service servicio = new Service.Service();
		//		List<Producto> product = await servicio.ProductoAsync(o);


		//		lstProducto = product.ToList();

			
		//		if (String.IsNullOrEmpty(product[0].DESCRIPCION)) {
		//			Console.WriteLine("NO HAY PRODUCTOS DESERIALIZADOS!");

		//			return false;
		//		} else {
		//			Console.WriteLine("PRODUCTOS DESERIALIZADOS!");
		//			TableViewProducts.Source = new NamesTableViewSource(lstProducto);
		//			return true;
		//		}
		//	} catch(Exception e){
		//		Console.WriteLine("Error de " + e);
		//	}






		//	return false;
		//}



	}
}
