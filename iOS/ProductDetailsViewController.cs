// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;

using Foundation;
using UIKit;

namespace maringuizarapp.iOS{
	public partial class ProductDetailsViewController : UIViewController{

		string precioCostoFijo;
		string descripcion;
		string idProducto; 
		List<DetailProductStock> lstDetailProductStock;


		public string CostoFijo {
			get { return precioCostoFijo; }
			set { precioCostoFijo = value;}
		}

		public string idProduct { 
			get { return idProducto;}
			set { idProducto = value;}
		}
		public string Descripcion { 
			get { return descripcion;}
			set { descripcion = value;}
		}

		public override void ViewDidLoad() {
			base.ViewDidLoad();
			this.Title = "Detalles";
			stockButton.TouchUpInside += StockButton_TouchUpInside;
			addItemToCart.Clicked += AddItemToCart_Clicked;

			stockButton.Enabled = false;
			stockButton.BackgroundColor = UIColor.Gray;
			labelPrecioCostoFijo.Text = precioCostoFijo;
			textViewDescripciÃ³n.Text = descripcion;
		}
		Int32 badgeCount = 0;
		void AddItemToCart_Clicked(object sender, EventArgs e) {
			Console.WriteLine("clicked!");
			badgeCount ++;

			this.TabBarController.ViewControllers[2].TabBarItem.BadgeValue = badgeCount.ToString();

		}

		public async  override void ViewWillAppear(bool animated) {
			base.ViewWillAppear(animated);

			try {
				Service.Service servicio = new Service.Service();
				Console.WriteLine("IdProducto"+idProduct +"  adasd" +idProducto);
				lstDetailProductStock = await servicio.DetailStock(idProducto);
				Console.WriteLine("Stock detalle " + lstDetailProductStock.Count);
				if (lstDetailProductStock.Count > 0) {
					stockButton.Enabled = true;
					stockButton.BackgroundColor = UIColor.FromRGB(255,38,0);
				}

			}
			catch {
				Console.WriteLine("Fallo solicitar stockDetail");
				var stockErrorAlert = UIAlertController.Create("Error de Red", "Necesita conectarse para solicitar estos datos", UIAlertControllerStyle.Alert);


				stockErrorAlert.AddAction (UIAlertAction.Create ("Ok", UIAlertActionStyle.Default, null));
			}

		}

		void StockButton_TouchUpInside(object sender, EventArgs e) {
			var productStock= (StockTableViewController)Storyboard.InstantiateViewController("StockTableViewController");
			Console.WriteLine("Enviando: "+ lstDetailProductStock.Count);
			productStock.StockList = lstDetailProductStock;
			this.NavigationController.PushViewController(productStock, true);


		}

		public ProductDetailsViewController (IntPtr handle) : base (handle){
		}
	}
}
